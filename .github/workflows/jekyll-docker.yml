name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    - name: Build with Maven
      run: mvn clean package -DskipTests --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.zip | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.zip | head -1 | sed "s/.zip/-$commitHash.zip/g")
        mv $artifactName1 $artifactName2
    - name: Upload artifact 
      uses: actions/upload-artifact@v4
      with:
          name: artifacts
          path: target/*.zip  # Updated to match Mule artifact type

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:    
    - uses: actions/checkout@v2
    - uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v4
      with:
        name: artifacts
    - name: Deploy to CloudHub
      env:
        ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
        ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
        ANYPOINT_ENVIRONMENT: ${{ secrets.ANYPOINT_ENVIRONMENT }}
        ANYPOINT_BUSINESS_GROUP: ${{ secrets.ANYPOINT_BUSINESS_GROUP }}
        APPLICATION_NAME: ${{ secrets.APPLICATION_NAME }}
      run: |
        artifactName=$(ls *.zip | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.clientId="$ANYPOINT_CLIENT_ID" \
         -Danypoint.clientSecret="$ANYPOINT_CLIENT_SECRET" \
         -Danypoint.environment="$ANYPOINT_ENVIRONMENT" \
         -Danypoint.businessGroup="$ANYPOINT_BUSINESS_GROUP" \
         -DapplicationName="$APPLICATION_NAME" \
         -DskipTests
