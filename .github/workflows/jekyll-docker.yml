name: Build and Deploy to Sandbox
 
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11  # Updated Java version
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Setup Maven Settings  # Added settings.xml step
      run: echo "${{ secrets.MAVEN_SETTINGS }}" > ~/.m2/settings.xml
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar target/*.zip 2>/dev/null | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(echo $artifactName1 | sed "s/.jar/-$commitHash.jar/;s/.zip/-$commitHash.zip/")
        mv $artifactName1 $artifactName2
    - name: Upload artifact 
      uses: actions/upload-artifact@v4
      with:
          name: artifacts
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      ANYPOINT_USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
      ANYPOINT_PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
 
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v4
      with:
        name: artifacts
    - name: Setup Maven Settings  # Added settings.xml step
      run: echo "${{ secrets.MAVEN_SETTINGS }}" > ~/.m2/settings.xml
    - name: Deploy to Sandbox
      run: |
        artifactName=$(ls *.jar *.zip 2>/dev/null | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.username="$ANYPOINT_USERNAME" \
         -Danypoint.password="$ANYPOINT_PASSWORD" \
         -DskipTests
